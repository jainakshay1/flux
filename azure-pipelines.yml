trigger:
- new

pool: default

steps:
- script: ls -ltr
  displayName: 'List files in the working directory'

- task: SonarQubePrepare@6
  inputs:
    SonarQube: 'sonar'  # Service connection name for SonarQube
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'cicds'  # Replace with your SonarQube project key
    cliProjectName: 'cicd'  # Replace with your SonarQube project name
    cliSources: 'testapp'  # Directory containing the source code
    extraProperties: |
      sonar.exclusions=**/*.test.js
  displayName: 'Prepare SonarQube Analysis'

- task: SonarQubeAnalyze@6
  displayName: 'Run SonarQube Analysis'

- task: SonarQubePublish@6
  inputs:
    pollingTimeoutSec: '300'  # Time to wait for SonarQube analysis to complete
  displayName: 'Publish SonarQube Quality Gate Result'

# Uncomment and update the following steps as needed for Docker and Azure deployments

# - task: Docker@2
#   inputs:
#     containerRegistry: 'dockerhub'
#     repository: 'akshayasgo/nodetest'
#     command: 'buildAndPush'
#     Dockerfile: 'testapp/Dockerfile'
#     buildContext: 'testapp'
#     tags: '$(Build.BuildId)'  # Use the build ID as the tag
#   displayName: 'Build and Push Docker Image'

# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'webapp'
#     appType: 'webAppContainer'
#     WebAppName: 'kahsyate'
#     DockerNamespace: 'docker.io'
#     DockerRepository: 'akshayasgo/nodetest'
#     DockerImageTag: '$(Build.BuildId)'
#   displayName: 'Deploy to Azure Web App'
